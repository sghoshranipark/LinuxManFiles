ABORT(3)                   Linux Programmer's Manual                  ABORT(3)

NAME
       abort - cause abnormal process termination

SYNOPSIS
       #include <stdlib.h>

       void abort(void);

DESCRIPTION
       The  abort()  first  unblocks  the SIGABRT signal, and then raises that
       signal for the calling process (as though raise(3) was  called).   This
       results  in  the abnormal termination of the process unless the SIGABRT
       signal  is  caught  and  the  signal  handler  does  not  return   (see
       longjmp(3)).

       If  the  abort()  function causes process termination, all open streams
       are closed and flushed.

       If the SIGABRT signal is ignored, or caught by a handler that  returns,
       the abort() function will still terminate the process.  It does this by
       restoring the default disposition for SIGABRT and then raising the sig‐
       nal for a second time.

RETURN VALUE
       The abort() function never returns.

ATTRIBUTES
       For   an   explanation   of   the  terms  used  in  this  section,  see
       attributes(7).

       ┌──────────┬───────────────┬─────────┐
       │Interface │ Attribute     │ Value   │
       ├──────────┼───────────────┼─────────┤
       │abort()   │ Thread safety │ MT-Safe │
       └──────────┴───────────────┴─────────┘
CONFORMING TO
       SVr4, POSIX.1-2001, POSIX.1-2008, 4.3BSD, C89, C99.

SEE ALSO
       gdb(1), sigaction(2), exit(3), longjmp(3), raise(3)

COLOPHON
       This page is part of release 4.04 of the Linux  man-pages  project.   A
       description  of  the project, information about reporting bugs, and the
       latest    version    of    this    page,    can     be     found     at
       http://www.kernel.org/doc/man-pages/.

GNU                               2015-03-02                          ABORT(3)
